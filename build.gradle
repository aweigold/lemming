apply plugin: 'groovy'
apply plugin: 'project-report'
apply plugin: 'codenarc'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        maven {
            name = 'BintrayJCenter'
            url = 'http://jcenter.bintray.com'
        }
        mavenCentral()
    }
    dependencies {
        classpath 'us.carrclan.david.gradle:gradle-site-plugin:0.2.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}


jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

apply plugin: 'site'

repositories {
    mavenCentral()
}

version = System.getenv("TRAVIS_BUILD_NUMBER") != null ? "1.0.${System.getenv("TRAVIS_BUILD_NUMBER")}" : "1.0-SNAPSHOT"

sourceSets {
    readmeSource {
        resources {
            srcDir "$projectDir"
            include 'README.md'
        }
    }
    site {
        resources {
            srcDir 'build/docs'
            srcDir 'build/reports'
            source readmeSource.resources
        }
    }
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '[2.4.5,)'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from 'build/docs/groovydoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

if (System.getenv("PUBLISH") != null){
    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'lemming'
                    packaging 'jar'
                    description 'A simple to use builder api for asynchronously collecting results in Java or Groovy.'
                    url 'http://http://aweigold.github.io/lemming/'

                    scm {
                        url 'git@github.com:aweigold/lemming.git'
                        connection 'git@github.com:aweigold/lemming.git'
                        developerConnection 'git@github.com:aweigold/lemming.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'aweigold'
                            name 'Adam J. Weigold'
                            email 'adam@adamweigold.com'
                        }
                    }
                }
            }
        }
    }
}
