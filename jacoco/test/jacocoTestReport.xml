<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="lemming"><sessioninfo id="testing-worker-linux-docker-1e683ee7-3354-linux-8-37bec898" start="1455028436915" dump="1455028441256"/><package name="com/adamweigold/lemming"><class name="com/adamweigold/lemming/Lemming$_collect_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="353"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/adamweigold/lemming/Lemming"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLemming" desc="()Lcom/adamweigold/lemming/Lemming;" line="97"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExecutor" desc="(Ljava/util/concurrent/ExecutorService;)Lcom/adamweigold/lemming/Lemming;" line="118"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setShutdownExecutorService" desc="(Z)Lcom/adamweigold/lemming/Lemming;" line="130"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/util/concurrent/Callable;)Lcom/adamweigold/lemming/Lemming;" line="141"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTimeout" desc="(J)Lcom/adamweigold/lemming/Lemming;" line="153"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThreadCount" desc="(I)Lcom/adamweigold/lemming/Lemming;" line="164"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThreadNameFormat" desc="(Ljava/lang/String;)Lcom/adamweigold/lemming/Lemming;" line="181"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDaemon" desc="(Z)Lcom/adamweigold/lemming/Lemming;" line="195"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPriority" desc="(I)Lcom/adamweigold/lemming/Lemming;" line="210"><counter type="INSTRUCTION" missed="2" covered="112"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThreadFactory" desc="(Ljava/util/concurrent/ThreadFactory;)Lcom/adamweigold/lemming/Lemming;" line="232"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExceptionStrategy" desc="(Lcom/adamweigold/lemming/ExceptionStrategy;)Lcom/adamweigold/lemming/Lemming;" line="248"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failOnAnyException" desc="()Lcom/adamweigold/lemming/Lemming;" line="260"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quietlyHandleAllExeptions" desc="()Lcom/adamweigold/lemming/Lemming;" line="271"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTimeoutStrategy" desc="(Lcom/adamweigold/lemming/ExceptionStrategy;)Lcom/adamweigold/lemming/Lemming;" line="286"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failOnAnyTimeout" desc="()Lcom/adamweigold/lemming/Lemming;" line="297"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quietlyHandleAllTimeouts" desc="()Lcom/adamweigold/lemming/Lemming;" line="308"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="()Ljava/util/Collection;" line="318"><counter type="INSTRUCTION" missed="88" covered="260"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initExecutorService" desc="()Ljava/util/concurrent/ExecutorService;" line="363"><counter type="INSTRUCTION" missed="2" covered="121"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="122" covered="817"/><counter type="BRANCH" missed="8" covered="32"/><counter type="LINE" missed="0" covered="68"/><counter type="COMPLEXITY" missed="7" covered="33"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/adamweigold/lemming/Lemming$__clinit__closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/adamweigold/lemming/Lemming$_initExecutorService_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="371"><counter type="INSTRUCTION" missed="2" covered="75"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDAEMON" desc="()Ljava/lang/Boolean;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCOUNT" desc="()Ljava/util/concurrent/atomic/AtomicLong;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPRIORITY" desc="()Ljava/lang/Integer;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBACKING_THREAD_FACTORY" desc="()Ljava/util/concurrent/ThreadFactory;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNAME_FORMAT" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="122"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/adamweigold/lemming/Lemming$__clinit__closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Lemming.groovy"><line nr="62" mi="2" ci="2" mb="0" cb="0"/><line nr="67" mi="2" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="63" mb="0" cb="0"/><line nr="97" mi="2" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="2" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="2" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="2" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="12" mb="0" cb="0"/><line nr="154" mi="2" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="12" mb="0" cb="0"/><line nr="165" mi="2" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="9" mb="0" cb="0"/><line nr="182" mi="0" ci="10" mb="0" cb="0"/><line nr="183" mi="2" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="12" mb="0" cb="0"/><line nr="196" mi="2" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="9" mb="0" cb="2"/><line nr="211" mi="0" ci="39" mb="0" cb="0"/><line nr="213" mi="0" ci="9" mb="0" cb="2"/><line nr="214" mi="0" ci="39" mb="0" cb="0"/><line nr="216" mi="0" ci="12" mb="0" cb="0"/><line nr="217" mi="2" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="11" mb="0" cb="0"/><line nr="233" mi="2" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="11" mb="0" cb="0"/><line nr="249" mi="2" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="11" mb="0" cb="0"/><line nr="261" mi="2" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="11" mb="0" cb="0"/><line nr="272" mi="2" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="11" mb="0" cb="0"/><line nr="287" mi="2" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="11" mb="0" cb="0"/><line nr="298" mi="2" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="11" mb="0" cb="0"/><line nr="309" mi="2" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="8" mb="0" cb="2"/><line nr="319" mi="0" ci="11" mb="0" cb="0"/><line nr="320" mi="8" ci="15" mb="5" cb="5"/><line nr="321" mi="14" ci="10" mb="0" cb="0"/><line nr="322" mi="0" ci="15" mb="0" cb="2"/><line nr="324" mi="0" ci="15" mb="0" cb="2"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="6" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="2"/><line nr="330" mi="0" ci="16" mb="0" cb="0"/><line nr="332" mi="0" ci="22" mb="0" cb="0"/><line nr="334" mi="0" ci="20" mb="0" cb="2"/><line nr="336" mi="0" ci="8" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="2"/><line nr="338" mi="0" ci="8" mb="0" cb="0"/><line nr="340" mi="0" ci="9" mb="0" cb="0"/><line nr="343" mi="0" ci="10" mb="0" cb="0"/><line nr="345" mi="1" ci="9" mb="0" cb="0"/><line nr="347" mi="9" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="352" mi="9" ci="8" mb="2" cb="2"/><line nr="353" mi="24" ci="30" mb="0" cb="0"/><line nr="355" mi="4" ci="4" mb="1" cb="3"/><line nr="356" mi="21" ci="18" mb="0" cb="0"/><line nr="363" mi="0" ci="18" mb="0" cb="2"/><line nr="364" mi="0" ci="9" mb="0" cb="0"/><line nr="365" mi="0" ci="9" mb="0" cb="0"/><line nr="366" mi="0" ci="9" mb="0" cb="0"/><line nr="368" mi="0" ci="23" mb="0" cb="2"/><line nr="369" mi="0" ci="25" mb="0" cb="2"/><line nr="370" mi="2" ci="26" mb="0" cb="0"/><line nr="371" mi="0" ci="14" mb="0" cb="0"/><line nr="372" mi="0" ci="6" mb="0" cb="2"/><line nr="373" mi="0" ci="21" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="2"/><line nr="376" mi="0" ci="9" mb="0" cb="0"/><line nr="378" mi="0" ci="6" mb="0" cb="2"/><line nr="379" mi="0" ci="9" mb="0" cb="0"/><line nr="381" mi="2" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="192" covered="979"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="0" covered="78"/><counter type="COMPLEXITY" missed="13" covered="44"/><counter type="METHOD" missed="6" covered="28"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="192" covered="979"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="0" covered="78"/><counter type="COMPLEXITY" missed="13" covered="44"/><counter type="METHOD" missed="6" covered="28"/><counter type="CLASS" missed="0" covered="5"/></package><counter type="INSTRUCTION" missed="192" covered="979"/><counter type="BRANCH" missed="8" covered="38"/><counter type="LINE" missed="0" covered="78"/><counter type="COMPLEXITY" missed="13" covered="44"/><counter type="METHOD" missed="6" covered="28"/><counter type="CLASS" missed="0" covered="5"/></report>